/* Correct tests */
module test1(a, b, y);
    input a;
    input b;
    output y;
    wire w1;
    and and1(w1, a, b);
    not not1(y, w1);
endmodule


module test2(a, b, c, y);
    input a;
    input b;
    input c;
    output y;
    wire w1, w2;
    or or1(w1, a, b);
    xor xor1(w2, a, c);
    and and2(y, w1, w2);
endmodule


module test_and(a, b, y);
    input a;
    input b;
    output y;
    and and3(y, a, b);
endmodule


module test_nand(a, b, y);
    input a;
    input b;
    output y;
    nand nand1(y, a, b);
endmodule


module test_or(a, b, y);
    input a;
    input b;
    output y;
    or or2(y, a, b);
endmodule


module test_nor(a, b, y);
    input a;
    input b;
    output y;
    nor nor1(y, a, b);
endmodule


module test_xor(a, b, y);
    input a;
    input b;
    output y;
    xor xor2(y, a, b);
endmodule


module test_xnor(a, b, y);
    input a;
    input b;
    output y;
    xnor xnor1(y, a, b);
endmodule

/* Incorrect tests */



module invalid1(a, b, y); 
    input a;
    input b;
    output y;
    wire w1;
    and and1(a, w1, b);/* In this logic gate "a" is not output sygnal or wire*/
    not not1(y, w1);
endmodule

module invalid2(a, a, b, y);/*In this module sygnal "a" declorated twice*/
    input a;
    input b;
    output y;
    wire w1;
    and and1(w1, a, b);
    not not1(y, w1);
endmodule
